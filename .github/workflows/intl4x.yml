name: package:intl4x
permissions:
  pull-requests: read # Changed to read, as we are only reading labels
  contents: read # Added for checkout action

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, labeled, unlabeled]
    paths:
      - ".github/workflows/intl4x.yml"
      - "pkgs/intl4x/**"
      - "submodules/**"
  push:
    branches: [main]
    paths:
      - ".github/workflows/intl4x.yml"
      - "pkgs/intl4x/**"
      - "submodules/**"
  schedule:
    - cron: "0 0 * * 0" # weekly

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: pkgs/intl4x
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          submodules: true

      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
        with:
          sdk: main

      - run: dart pub get

      - run: dart analyze --fatal-infos

      - run: dart format --output=none --set-exit-if-changed .

      - run: dart test

      - run: dart test -p chrome

      - run: dart pub get
        working-directory: pkgs/intl4x/example_native

      - run: dart --enable-experiment=record-use build cli bin/example_native.dart
        working-directory: pkgs/intl4x/example_native

      - run: tree . -a
        if: matrix.os == 'ubuntu-latest'

      - name: Run example_native (Linux)
        working-directory: pkgs/intl4x/example_native
        if: matrix.os == 'ubuntu-latest'
        run: ./build/cli/linux_x64/bundle/bin/example_native

      - name: Print file size and check limit for example_native (Linux)
        working-directory: pkgs/intl4x/example_native
        if: matrix.os == 'ubuntu-latest'
        run: |
          FILE_PATH="build/cli/linux_x64/bundle/lib/libintl4x.so"
          FILE_SIZE=$(stat -c %s "$FILE_PATH")
          echo "Linux executable size: $FILE_SIZE bytes"
          if [ "$FILE_SIZE" -gt 10485760 ]; then
            echo "Error: Linux executable size ($FILE_SIZE bytes) exceeds 10MB limit (10485760 bytes)."
            exit 1
          fi

      - name: Run example_native (Mac)
        working-directory: pkgs/intl4x/example_native
        if: matrix.os == 'macos-latest'
        run: ./build/cli/macos_arm64/bundle/bin/example_native

      - name: Print file size and check limit for example_native (Mac)
        working-directory: pkgs/intl4x/example_native
        if: matrix.os == 'macos-latest'
        run: |
          FILE_PATH="build/cli/macos_arm64/bundle/lib/libintl4x.dylib"
          FILE_SIZE=$(stat -f %z "$FILE_PATH")
          echo "macOS executable size: $FILE_SIZE bytes"
          if [ "$FILE_SIZE" -gt 10485760 ]; then
            echo "Error: macOS executable size ($FILE_SIZE bytes) exceeds 10MB limit (10485760 bytes)."
            exit 1
          fi

      - name: Run example_native (Windows)
        working-directory: pkgs/intl4x/example_native
        if: matrix.os == 'windows-latest'
        run: .\build\cli\windows_x64\bundle\bin\example_native.exe
      - name: Print file size and check limit for example_native (Windows)
        working-directory: pkgs/intl4x/example_native
        if: matrix.os == 'windows-latest'
        run: |
          $filePath = ".\build\cli\windows_x64\bundle\lib\intl4x.dll"
          $fileSize = (Get-Item $filePath).Length
          Write-Host "Windows executable size: $fileSize bytes"
          if ($fileSize -gt 10485760) {
            Write-Host "Error: Windows executable size ($fileSize bytes) exceeds 10MB limit (10485760 bytes)."
            exit 1
          }
