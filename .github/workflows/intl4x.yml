name: package:intl4x
permissions: read-all

on:
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/intl4x.yml'
      - 'pkgs/intl4x/**'
      - 'submodules/**'
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/intl4x.yml'
      - 'pkgs/intl4x/**'
      - 'submodules/**'
  schedule:
    - cron: '0 0 * * 0' # weekly

jobs:
  build_checkout:
    runs-on:  ${{ matrix.os }}

    defaults:
      run:
        working-directory: pkgs/intl4x
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          submodules: true

      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
        with:
          sdk: main

      - run: dart pub get

      - run: dart tool/write_option_file.dart pubspec.yaml checkout $(realpath ${{ github.workspace }}/submodules/icu4x)
        if: matrix.os == 'ubuntu-latest'

      - run: dart tool/write_option_file.dart pubspec.yaml checkout $(realpath ${{ github.workspace }}/submodules/icu4x)
        if: matrix.os == 'macos-latest'
      
      - run: dart tool/write_option_file.dart pubspec.yaml checkout (Get-Item  ${{ github.workspace }}\submodules\icu4x).FullName -replace '/', '\'
        if: matrix.os == 'windows-latest'

      - run: dart analyze --fatal-infos

      - run: dart format --output=none --set-exit-if-changed .

      - run: dart test

      - run: dart test -p chrome

      - run: dart pub get
        working-directory: pkgs/intl4x/example_native

      - run: dart --enable-experiment=record-use build cli bin/example_native.dart 
        working-directory: pkgs/intl4x/example_native

      - run: tree . -a

      - run: ./build/cli/linux_x64/bundle/bin/example_native
        working-directory: pkgs/intl4x/example_native

  build_fetch:
    runs-on:  ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      
    defaults:
      run:
        working-directory: pkgs/intl4x

    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          submodules: true

      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
        with:
          sdk: main

      - run: dart pub get

      - run: dart tool/write_option_file.dart pubspec.yaml fetch

      - run: dart test

      - run: dart pub get
        working-directory: pkgs/intl4x/example_native

      - run: dart --enable-experiment=record-use build cli bin/example_native.dart 
        working-directory: pkgs/intl4x/example_native

      - run: ./build/cli/linux_x64/bundle/bin/example_native
        working-directory: pkgs/intl4x/example_native

  build_local:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      with:
        submodules: true

    - name: Install Rust toolchains
      run: |
        rustup toolchain install stable
        rustup toolchain install nightly
    
    - name: Show the selected Rust toolchain
      run: rustup show
    
    - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
      with:
        sdk: main

    - name: Build Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir submodules/icu4x/bin
        cd pkgs/intl4x
        dart pub get

        dart lib/src/hook_helpers/build_libs.g.dart --file bin/linux_x64 --os linux --architecture x64 --compile_type dynamic --cargo_features collator,datetime,list,decimal,plurals,buffer_provider,experimental,default_components,compiled_data

    - name: Build Mac
      if: matrix.os == 'macos-latest'
      run: |
        rustup component add rust-src --toolchain nightly-aarch64-apple-darwin
        mkdir submodules/icu4x/bin
        cd pkgs/intl4x
        dart pub get

        dart lib/src/hook_helpers/build_libs.g.dart  --file bin/macos_arm64 --os macos --architecture arm64 --compile_type dynamic --cargo_features collator,datetime,list,decimal,plurals,buffer_provider,experimental,default_components,compiled_data

    - name: Build Windows
      if: matrix.os == 'windows-latest'
      run: |
        rustup component add rust-src --toolchain nightly-x86_64-pc-windows-msvc
        mkdir submodules/icu4x/bin
        cd pkgs/intl4x
        dart pub get

        dart lib/src/hook_helpers/build_libs.g.dart --file bin/windows_x64 --os windows --architecture x64 --compile_type dynamic --cargo_features collator,datetime,list,decimal,plurals,buffer_provider,experimental,default_components,compiled_data

    - name: Run `dart pub get`
      run: |
        cd pkgs/intl4x
        dart pub get

    - run: dart pkgs/intl4x/tool/write_option_file.dart pkgs/intl4x/pubspec.yaml local $(realpath submodules/icu4x/bin/linux_x64)
      if: matrix.os == 'ubuntu-latest'

    - run: dart pkgs/intl4x/tool/write_option_file.dart pkgs/intl4x/pubspec.yaml local $(realpath submodules/icu4x/bin/macos_arm64)
      if: matrix.os == 'macos-latest'
    
    - run: dart pkgs/intl4x/tool/write_option_file.dart pkgs/intl4x/pubspec.yaml local (Get-Item submodules\icu4x\bin\windows_x64).FullName -replace '/', '\'
      if: matrix.os == 'windows-latest'

    - run: echo $LOCAL_ICU4X_BINARY
          
    - name: Display structure of downloaded files
      run: ls -R

    - name: Run `dart test`
      run: |
        cd pkgs/intl4x
        dart test

    - run: dart pub get
      working-directory: pkgs/intl4x/example_native

    - run: dart --enable-experiment=record-use build cli bin/example_native.dart 
      working-directory: pkgs/intl4x/example_native

    - run: ./build/cli/linux_x64/bundle/bin/example_native
      working-directory: pkgs/intl4x/example_native
